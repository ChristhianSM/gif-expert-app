{"version":3,"sources":["Componentes/AddCategory.js","Componentes/Footer.js","helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","Footer","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","gif","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","toUpperCase","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGrid","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACQ,sBAAMC,SARO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACvCN,EAAc,MAId,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAhBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,aCPtBG,EAAS,WAClB,OACI,iCACI,mF,+BCLCC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GACd,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAG7Ca,QAAQC,IAAIR,GAdO,kBAeZA,GAfY,4CAAH,sDCEPS,EAAc,SAAC,GAAkB,IAAjBL,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAMjB,EAAKkB,IAAOR,IACvB,kCAAKA,EAAMS,cAAX,WCHCC,EAAU,SAAC,GAAgB,IAAftB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZf,mBAAS,CAC/BsB,KAAO,GACPgB,SAAU,IAJwB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAZAC,qBAAW,WACP3B,EAAQC,GACH2B,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLlB,KAAOqB,EACPL,SAAU,MAEf,UAEb,CAACvB,IAEIwB,EDbwBM,CAAa9B,GAAhCa,EAHuB,EAG5BN,KAAagB,EAHe,EAGfA,QAGpB,OAFAR,QAAQC,IAAIO,GAGR,qCACI,oBAAIL,UAAY,oCAAhB,SAAqDlB,IACrD,uBAEIuB,GAAW,mBAAGL,UAAY,mCAAf,yBAEf,qBAAKA,UAAY,YAAjB,SAEYL,EAAOJ,KAAI,SAAAsB,GAAK,OACX,cAAC,EAAD,eAEOA,GADGA,EAAMpB,aEjBhCqB,EAAe,WAAM,MAGM/C,mBAAS,CAAC,gBAHhB,mBAGvBgD,EAHuB,KAGXjD,EAHW,KAQ9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAE9B,6BAEQiD,EAAWxB,KAAK,SAAAT,GAAQ,OAChB,cAAC,EAAD,CAEIA,SAAYA,GADLA,QAO3B,cAAC,EAAD,Q,MCxBZkC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.57d5b2f8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    //Funciones\n    const handleInputValue = (e) =>{\n            setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories( categ => [inputValue,...categ ])\n            setInputValue('')\n        }     \n    }\n    return (\n            <form onSubmit = {handleSubmit}>\n                <input \n                    type = 'text'\n                    value = {inputValue}\n                    onChange = { handleInputValue}\n                />\n            </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>&copy; Copyright 2020 Christhian Silup√∫ Moscol</p>\r\n        </footer>\r\n    )\r\n}\r\n","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=3wTWkiTCNGmaq3gXNOiu9MKxZqdCYDmw&q=${encodeURI(category)}&limit=10`;\r\n\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    // console.log(data)\r\n\r\n    const gifs = data.map(gif => {\r\n            return {\r\n                id : gif.id,\r\n                title : gif.title,\r\n                url: gif.images.downsized_medium.url\r\n            }\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    // console.log(title, url)\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src= {url} alt = {title}></img>\r\n            <p> {title.toUpperCase()} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGrid } from '../hooks/useFetchGrid'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const {data:images, loading} = useFetchGrid(category);\r\n    console.log(loading)\r\n\r\n    return (\r\n        <>\r\n            <h2 className = \"animate__animated animate__fadeIn\">{category}</h2>\r\n            <hr></hr>\r\n            {\r\n                loading && <p className = \"animate__animated animate__flash\">Loading ...</p>\r\n            }\r\n            <div className = \"card-grid\">   \r\n                    {\r\n                        images.map(image => \r\n                            (<GifGridItem \r\n                                key = {image.id}\r\n                                {...image}\r\n                            />)\r\n                        )\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGrid = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading : true\r\n    })\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then( imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data : imgs,\r\n                        loading : false\r\n                    })\r\n                }, 3000);     \r\n            })\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { Footer } from './Componentes/Footer';\r\nimport { GifGrid } from './Componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Dragon ball', 'One punch Man']\r\n    const [categories, setCategories] = useState(['Dragon ball']);\r\n    // const handleApp = () =>{\r\n    //     // setCategories([...categories, 'HunterxHunter']);\r\n    //     setCategories( categ => [...categ, 'One piece'])\r\n    // }\r\n    return (\r\n        <>\r\n            <h1> GifExpertApp</h1>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                            <GifGrid \r\n                                key = {category}\r\n                                category = {category}\r\n                            />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}